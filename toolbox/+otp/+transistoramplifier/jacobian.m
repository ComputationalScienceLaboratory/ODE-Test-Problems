function J = jacobian(~, y, ~, R, ~, UF, alpha, beta)

g23p   = beta/UF*exp((y(2) - y(3))/UF);
g56p   = beta/UF*exp((y(5) - y(6))/UF);

J = [...
    1/R(1), 0                                   , 0               , 0     , 0                                   , 0               , 0     , 0     ; ...
    0     , (1/R(2) + 1/R(3)) - (alpha - 1)*g23p, (alpha - 1)*g23p, 0     , 0                                   , 0               , 0     , 0     ; ...
    0     , -g23p                               , g23p + 1/R(4)   , 0     , 0                                   , 0               , 0     , 0     ; ...
    0     , alpha*g23p                          , -alpha*g23p     , 1/R(5), 0                                   , 0               , 0     , 0     ; ...
    0     , 0                                   , 0               , 0     , (1/R(6) + 1/R(7)) - (alpha - 1)*g56p, (alpha - 1)*g56p, 0     , 0     ; ...
    0     , 0                                   , 0               , 0     , -g56p                               , g56p + 1/R(8)   , 0     , 0     ; ...
    0     , 0                                   , 0               , 0     , alpha*g56p                          , -alpha*g56p     , 1/R(9), 0     ; ...
    0     , 0                                   , 0               , 0     , 0                                   , 0               , 0     , 1/R(10) ...
    ];

end
