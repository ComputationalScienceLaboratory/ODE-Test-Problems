function Jv = jacobianAdjointVectorProduct(~, y, v)

y6 = y(6);
y8 = y(8);

v1 = v(1);
v2 = v(2);
v3 = v(3);
v4 = v(4);
v5 = v(5);
v6 = v(6);
v7 = v(7);
v8 = v(8);

Jv = [
    1.71 * (v2 - v1);
    0.43 * v1 - 8.75 * v2 + 8.32 * v4;
    8.32 * v1 - 10.03 * v3 + 1.71 * v4;
    0.43 * v3 - 1.12 * v4 + 0.69 * v6;
    0.035 * v3 - 1.745 * v5 + 1.71 * v6;
    0.43 * (v5 - v6) + 280 * y8 * (v7 - v6 - v8);
    0.43 * v5 + 0.69 * v6 + 1.81 * (v8 - v7);
    280 * y6 * (v7 - v6 - v8)];

end
